{"version":3,"file":"static/js/411.5ddf8272.chunk.js","mappings":"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","sources":["components/Header.js","apps/admin/dashboard/AdminItemList.js","features/admins/adminsApiSlice.js","apps/admin/dashboard/DashAdminsList.js","apps/admin/dashboard/ClientItemList.js","apps/admin/dashboard/DashClientsList.js","apps/admin/dashboard/Dashboard.js","apps/admin/AdminHome.js","apps/admin/AdminAppLayout.js","apps/admin/dashboard/ClientsListPage.js","components/ClientAccountInfo.js","components/Chart.js","components/ClientAccountScript.js","apps/admin/dashboard/ClientAccount.js","apps/admin/dashboard/AdminsListPage.js","apps/admin/dashboard/AdminAccount.js","apps/admin/AdminCreate.js","apps/admin/AdminApp.js","components/Footer.js","features/auth/Login.js"],"sourcesContent":["import { useNavigate, Link, useLocation } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport useAuth from '../hooks/useAuth.js';\nimport { useSendLogoutMutation } from '../features/auth/authApiSlice'\nimport Login from '../features/auth/Login.js';\n\nconst Header = () => {\n  const { username, roles } = useAuth();\n  const navigate = useNavigate();\n\n  const [accountPanel, setAccountPanel] = useState({\n    isOpen: false,\n  });\n  \n  const [sendLogout, {\n    isLoading,\n    isSuccess,\n    isError,\n    error\n  }] = useSendLogoutMutation();\n\n  useEffect(() => {\n    if (isSuccess) {\n      console.log('sooo?');\n      setPersist(false);\n\n      //navigate('/')\n    }\n  }, [isSuccess, navigate]);\n\n  return (\n    <header>\n      <Link to=\"/\"><h1>Админка</h1></Link>\n      {\n        username ? \n          <nav>\n            <ul>\n              <li><Link to=\"/home\">Home</Link></li>\n            </ul>\n          </nav>\n        : null\n      }\n      {\n         username ? accountPanel.isOpen ? \n          <>\n            <button onClick={() => setAccountPanel(prev => ({...prev, isOpen: !prev.isOpen}))}>Закрыть</button>\n            <button\n              className=\"icon-button\"\n              title=\"Выйти\"\n              onClick={() => {\n                sendLogout()\n              }}\n            >\n              Выйти</button>\n            \n          </>\n        : \n          <button onClick={() => setAccountPanel(prev => ({...prev, isOpen: !prev.isOpen}))}>\n            <div>{username}</div>\n          </button>\n        : null\n      }\n    </header>\n  );\n}\n\nexport default Header;\n","import { Link } from 'react-router-dom';\nimport useAuth from '../../../hooks/useAuth';\n\nconst AdminItemList = ({admin}) => {\n  const a = useAuth();\n\n  return (\n    <>\n      {\n        <li>\n          <Link to={\"/admins/\" + admin.username}>\n            <div className=\"container border\">\n              <div className=\"row\">\n                <div className=\"col-lg-12 col-md-12 d-flex justify-content-between border\">\n                  <span>{admin.username}</span>\n                  {admin.username === a.username && <span>вы</span> }\n                </div>\n              </div>\n            </div>\n          </Link>\n        </li>\n      }\n    </>\n  );\n}\n//            <div className=\"col-lg-3 col-md-6 border\">\n//              <p className=\"\">депозит</p>\n//            </div>\n//            <div className='col-lg-3 col-md-12 border'>\n//              {admin?.createdAt && \n//                <div className=\"border\">{new Date(admin.createdAt).toLocaleDateString(\"ru-RU\")}</div>}\n//            </div>\n//            <div className={`col-lg-2 ${true ? \"bg-danger\" : \"bg-success\"}`}>\n//\n//            </div>\n//          </div>\n//          <div className=\"row\">\n//            <div className=\"col-lg-7 border\">\n//              <p>KOSH</p>\n//            </div>\n//            <div className='col-lg-3 col-md-12 border'>\n//              {admin?.updatedAt && \n//                <div className=\"border\">{new Date(admin.createdAt).toLocaleDateString(\"ru-RU\")}</div>}\n//            </div>\n//          </div>\n//        </div>\n//\n//      </Link>\n//    </ul>\n//  </div>\n//  );\n//}\n\nexport default AdminItemList;\n","import {\n  createSelector,\n  createEntityAdapter\n} from \"@reduxjs/toolkit\";\nimport { apiSlice } from \"../../app/api/apiSlice\"\n\nconst adminsAdapter = createEntityAdapter({})\n\nconst initialState = adminsAdapter.getInitialState()\n\nexport const adminsApiSlice = apiSlice.injectEndpoints({\n  endpoints: builder => ({\n    getAdmins: builder.query({\n      query: () => '/admins',\n      validateStatus: (response, result) => {\n        return response.status === 200 && !result.isError\n      },\n      transformResponse: responseData => {\n        const loadedAdmins = responseData.map(admin => {\n          admin.id = admin._id\n          return admin\n        });\n        //console.log(loadedAdmins)\n        return adminsAdapter.setAll(initialState, loadedAdmins);\n      },\n      providesTags: (result, error, arg) => {\n        //console.log(result);\n        if (result?.ids) {\n          return [\n            { type: 'Admin', id: 'LIST' },\n            ...result.ids.map(id => ({ type: 'Admin', id }))\n          ]\n        } else return [{ type: 'Admin', id: 'LIST' }]\n      }\n    }),\n    addNewAdmin: builder.mutation({\n      query: initialAdminData => ({\n        url: '/admins',\n        method: 'POST',\n        body: {\n          ...initialAdminData,\n        }\n      }),\n      invalidatesTags: [\n        { type: 'Admin', id: \"LIST\" }\n      ]\n    }),\n    updateAdmin: builder.mutation({\n      query: initialAdminData => ({\n        url: '/admins',\n        method: 'PATCH',\n        body: {\n          ...initialAdminData,\n        }\n      }),\n      invalidatesTags: (result, error, arg) => [\n        { type: 'Admin', id: arg.id }\n      ]\n    }),\n    deleteAdmin: builder.mutation({\n      query: ({ id }) => ({\n        url: `/admins`,\n        method: 'DELETE',\n        body: { id }\n      }),\n      invalidatesTags: (result, error, arg) => [\n        { type: 'Admin', id: arg.id }\n      ]\n    }),\n  }),\n})\n\nexport const {\n  useGetAdminsQuery,\n  useAddNewAdminMutation,\n  useUpdateAdminMutation,\n  useDeleteAdminMutation,\n} = adminsApiSlice;\n\n// returns the query result object\nexport const selectAdminsResult = adminsApiSlice.endpoints.getAdmins.select();\n\n// creates memoized selector\nconst selectAdminsData = createSelector(\n  selectAdminsResult,\n  adminsResult => adminsResult.data // normalized state object with ids & entities\n);\n\n//getSelectors creates these selectors and we rename them with aliases using destructuring\nexport const {\n  selectAll: selectAllAdmins,\n  selectById: selectAdminById,\n  selectIds: selectAdminIds\n  // Pass in a selector that returns the admins slice of state\n} = adminsAdapter.getSelectors(state => selectAdminsData(state) ?? initialState);\n","import { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport AdminItemList from './AdminItemList.js';\nimport { selectAdminsResult, useGetAdminsQuery, selectAllAdmins } from '../../../features/admins/adminsApiSlice.js';\nimport { apiSlice } from '../../../app/api/apiSlice'\nimport useAuth from '../../../hooks/useAuth';\n\nconst DashAdminsList = () => {\n  const you = useAuth();\n  const admins = useSelector(selectAllAdmins);\n\n  console.log(admins);\n\n  return (\n    <div className=\"\">\n      <h3>Список админов</h3>\n      <ul>\n      {\n        //(!isLoading && isSuccess) && \n        admins?.map((admin) => {\n          return <><AdminItemList key={admin.id} admin={{...admin}}/><hr/></>\n        })\n      }\n      </ul>\n      {you.roles.includes('superadmin') && <Link to=\"/admins/create\" className=\"btn btn-primary border rounded-50\" name=\"Добавить админа\">+</Link> }\n    </div>\n  );\n}\n//            <div className=\"col-lg-3 col-md-6 border\">\n//              <p className=\"\">депозит</p>\n//            </div>\n//            <div className='col-lg-3 col-md-12 border'>\n//              {admin?.createdAt && \n//                <div className=\"border\">{new Date(admin.createdAt).toLocaleDateString(\"ru-RU\")}</div>}\n//            </div>\n//            <div className={`col-lg-2 ${true ? \"bg-danger\" : \"bg-success\"}`}>\n//\n//            </div>\n//          </div>\n//          <div className=\"row\">\n//            <div className=\"col-lg-7 border\">\n//              <p>KOSH</p>\n//            </div>\n//            <div className='col-lg-3 col-md-12 border'>\n//              {admin?.updatedAt && \n//                <div className=\"border\">{new Date(admin.createdAt).toLocaleDateString(\"ru-RU\")}</div>}\n//            </div>\n//          </div>\n//        </div>\n//\n//      </Link>\n//    </ul>\n//  </div>\n//  );\n//}\n\nexport default DashAdminsList;\n","import { Link } from 'react-router-dom';\n\nconst ClientItemList = ({ client }) => {\n  const clientKeys = Object.keys(client).filter(key => !key.match(/_/g));\n//console.log(Object.keys(client).filter(key => !key.match(/_/g)));\n\n  return (\n    <>\n      {\n      <li>\n        <Link to={\"/clients/\" + client.id}>\n            <div className=\"container border\">\n              <div className=\"row\">\n                <div className=\"col-lg-4 col-md-6 border\">\n                  {(client?.firstname || client?.lastname) ? \n                    <p>{client.firstname} {client.lastname}</p> :\n                    <p>{client.email}</p>\n                  }\n                </div>\n                <div className=\"col-lg-3 col-md-6 border\">\n                  <p className=\"\">депозит</p>\n                </div>\n                <div className='col-lg-3 col-md-12 border'>\n                  {client?.createdAt && \n                    <div className=\"border\">{new Date(client.createdAt).toLocaleDateString(\"ru-RU\")}</div>}\n                </div>\n                <div className={`col-lg-2 ${true ? \"bg-danger\" : \"bg-success\"}`}>\n                      \n                </div>\n              </div>\n              <div className=\"row\">\n                <div className=\"col-lg-7 border\">\n                  <p>KOSH</p>\n                </div>\n                <div className='col-lg-3 col-md-12 border'>\n                  {client?.updatedAt && \n                    <div className=\"border\">{new Date(client.updatedAt).toLocaleDateString(\"ru-RU\")}</div>}\n                </div>\n              </div>\n            </div>\n\n        </Link>\n      </li>\n\n      }\n    </>\n  );\n}\n\nexport default ClientItemList;\n","import { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport ClientItemList from './ClientItemList.js';\nimport { selectClientsResult, useGetClientsQuery, selectAllClients } from '../../../features/admins/clientsApiSlice.js';\nimport { apiSlice } from '../../../app/api/apiSlice'\n\nconst DashClientsList = () => {\n  const clients = useSelector(selectAllClients);\n\n  return (\n    <>\n      {\n        clients?.map((client) => <><ClientItemList key={client.id} client={{...client}}/><hr/></>)\n      }\n    </>\n  );\n}\n\nexport default DashClientsList;\n","import DashAdminsList from './DashAdminsList.js';\nimport DashClientsList from './DashClientsList.js';\n\nconst Dashboard = () => {\n  return (\n    <>\n      <h2>Dashboard</h2>\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-lg-8 border border-dark\">\n            <DashClientsList />\n          </div>\n          <div className=\"col-lg-4 border border-dark\">\n            <DashAdminsList />\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default Dashboard;\n","import { useEffect } from 'react';\nimport { useNavigate, Link, useLocation } from 'react-router-dom';\nimport useAuth from '../../hooks/useAuth.js';\n\nimport Dashboard from './dashboard/Dashboard.js';\n\nconst AdminHome = () => {\n  const { username } = useAuth();\n\n  return (\n    <main>\n      <Dashboard />\n    </main>\n  );\n}\n\nexport default AdminHome;\n\n\n","import { Outlet } from 'react-router-dom';\nimport Header from '../../components/Header.js';\nimport Footer from '../../components/Footer.js';\n\nconst AdminAppLayout = () => {\n  return (\n    <>\n      <Header />\n      <div>\n        <Outlet />\n      </div>\n      <Footer />\n    </>\n  );\n}\n\nexport default AdminAppLayout;\n","const ClientsListPage = () => {\n  return (\n    <div>ClientsListPage</div>\n  );\n}\n\nexport default ClientsListPage;\n","import { useState, useEffect } from 'react';\nimport { useParams, Link, useNavigate } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport {selectClientById, useUpdateClientNewTraderMutation, useUpdateClientActivateMutation, useDeleteClientMutation } from '../features/admins/clientsApiSlice';\nimport { useGetAdminsQuery, selectAdminById, selectAdminsResult, selectAllAdmins, selectAdminIds } from '../features/admins/adminsApiSlice';\nimport useAuth from '../hooks/useAuth';\n\nconst ClientAccountInfo = () => {\n  const { id } = useParams();\n  const you = useAuth();\n  const {\n    firstname,\n    lastname,\n    email,\n    phone,\n    createdAt,\n    updatedAt,\n    trader,\n    active,\n    deleted,\n  } = useSelector(state => selectClientById(state, id)) || {};\n  const admins = useSelector(state => selectAllAdmins(state));\n  const [isEdit, setIsEdit] = useState(false);\n\n  const [newTrader, setNewTrader] = useState(\"\");\n  const [scriptTime, setScriptTime] = useState(\"\");\n  const [scriptProfit, setScriptProfit] = useState(\"\");\n\n  const navigate = useNavigate();\n\n  const [\n    updateClientNewTrader, {\n    isLoading,\n    isError,\n    isUninitialized,\n    isSuccess\n    }\n  ]= useUpdateClientNewTraderMutation();\n\n  const handleSetTrader = e => {\n    console.log(e.target.value);\n    setNewTrader(e.target.value);\n  }\n\n  const handleUpdateClientNewTrader = e => {\n    e.preventDefault();\n    updateClientNewTrader({ id, trader: newTrader, active })\n    setIsEdit(false);\n  }\n  const handleDeactivateClient = e => {\n    e.preventDefault();\n    updateClientActivate({ id, active })\n  }\n  const handleDeleteClient = e => {\n    e.preventDefault();\n    deleteClient({ id })\n  }\n\n  const handleStartScript = e => {\n    e.preventDefault();\n    console.log(\n      \"Start script\"\n    );\n  }\n\n  return (\n    <>\n    <table className=\"table table-striped\">\n      <thead>\n      </thead>\n      <tbody>\n        <tr>\n          <th scope=\"row\">ID</th>\n          <td>{id}</td>\n        </tr>\n        <tr>\n          <th>имя: </th>\n          <td>{firstname}</td>\n        </tr>\n        <tr>\n          <th>фамилия: </th>\n          <td>{lastname}</td>\n        </tr>\n        <tr>\n          <th>телефон: </th>\n          <td>{phone}</td>\n        </tr>\n        <tr>\n          <th>почта: </th>\n          <td>{email}</td>\n        </tr>\n        <tr>\n          <th>трейдер: </th>\n          <td>\n            <select \n              onChange={handleSetTrader} \n              value={newTrader} \n              className=\"form-select\" \n              aria-label=\"назначить тредера\"\n              disabled={deleted || !isEdit}\n            >\n              <option value={\"\"}>назначить трейдера</option>\n              {\n                admins.map((admin, i) => \n                  <option \n                    key={`option${admin.username}`}\n                    style={{border: '1px solid red'}}\n                    className={(admin.username === you.username ? 'text-primary' : '') + (i % 2 == 0 && ' bg-secondary')} \n                    value={admin.username}\n                  >\n                    {admin.username} {admin.username === you.username ? 'вы' : ''}\n                  </option>)\n              }\n            </select>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n    <div className=\"row\">\n      {!isEdit ? <div className=\"col-lg-6\">\n        <button\n          onClick={()=>setIsEdit(true)} \n          className={`btn ${deleted ? \"btn-muted\" : \"btn-primary\"}`} \n          disabled={deleted}\n        >редактировать</button>\n      </div> : \n\n        <div className=\"btn-group col-lg-6\">\n          <button\n            onClick={handleUpdateClientNewTrader} \n            className={`btn ${deleted ? \"btn-muted\" : \"btn-primary\"}`} \n            disabled={deleted || !newDataReady}\n          >сохранить</button>\n          <button\n            onClick={()=>setIsEdit(false)} \n            className={`btn ${deleted ? \"btn-muted\" : \"btn-warning\"}`} \n            disabled={deleted}\n          >отменить</button>\n        </div>}\n      <div className=\"col-lg-6\">\n        <div className=\"float-end btn-group\">\n          {/*<button \n                  onClick={handleDeactivateClient} \n                  className=\"btn btn-warning\"\n                >{ active ? \"Деактивировать\" : \"Активировать\" }</button>*/}\n          <button \n            onClick={handleDeleteClient} \n            className={`btn ${deleted ? \"btn-muted\" : \"btn-danger\"}`} \n            disabled={deleted}\n          >Удалить</button>\n        </div>\n      </div>\n    </div>\n    </>\n  );\n}\n\nexport default ClientAccountInfo;\n","import React, { useEffect, useState, useRef, memo } from 'react';\nimport ApexChart from 'react-apexcharts';\nimport ApexCharts from 'apexcharts';\n\nconst toDateTimeLocale = d => new Date(d - new Date(d).getTimezoneOffset() * 60000).toISOString().slice(0, -8);\n\nconst Chart = memo(function Chart({ name, id, data, alias }) {\n  const chartRef = useRef(null);\n\n  useEffect(() => {\n    ApexCharts.exec(`${id}`, 'updateSeries', [{ name, data }], false);\n  }, [data]);\n\n  const chartOptions={\n    chart: { \n      id, \n      animations: { enabled: true, }, \n      toolbar: { show: false }, \n      zoom: { enabled: false } ,\n    \n    },\n    stroke: {\n      show: true,\n      curve: 'straight',\n      lineCap: 'butt',\n      colors: undefined,\n      width: 1,\n      dashArray: 0, \n    },\n    xaxis: { \n      type: 'datetime', \n      tickAmount: 6, \n    },\n    yaxis: { \n      type: 'numeric', \n      title: { text: 'Price (USDT)' },\n      labels: { \n        formatter: (val) => val.toFixed(2)\n      }\n    }\n  };\n\n  return (\n    <div className=\"col-xxl-12 col-xl-12 col-lg-12\">\n      <div className={`price-widget`}>\n        {/*<div className=\"price-content\">\n            <div className=\"icon-title\" style={{zIndex: \"100\"}}>\n              <i className={`cc ${id.toUpperCase()}-alt`}></i>\n              <span>{ alias }</span>\n            </div>\n          </div>*/}\n        <div id=\"chart\">\n\n          {!data?.length > 0 ? <p className='text-center text-white t-3'>Chart is loading...</p>: \n\n            <ApexChart\n              type=\"line\"\n              height={400}\n              series={[{ name, data: data.map(item => [toDateTimeLocale(item[0]), item[1]]) }]}\n              options={chartOptions}\n            />\n\n          }\n        </div>\n      </div>\n    </div>\n  );\n});\n\nexport default Chart;\n","import { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport Chart from './Chart.js';\nimport { useAddNewScriptMutation } from '../features/scripts/scriptsApiSlice.js';\nimport useAuth from '../hooks/useAuth.js';\nimport {selectClientById, useUpdateClientNewTraderMutation, useUpdateClientActivateMutation, useDeleteClientMutation } from '../features/admins/clientsApiSlice';\n\nconst toDate = dstr => new Date(dstr).getTime();\n\nconst toDateTimeLocale = d => new Date(d - new Date(d).getTimezoneOffset() * 60000).toISOString().slice(0, -8);\n\nfunction generate ({sum = 100, profit = 3, duration=3, step=1, start= Date.now()}) {\n  const durMs = (duration*60*60*1000);\n  const fsum = sum*(1+(profit/100));\n  const startMs = start;\n\n  const points = recurGener();\n  points.unshift(0);\n  points.push(1);\n\n  return points.map((p, i) => [startMs + i * durMs/points.length , sum + (fsum-sum)*p]);\n}\n\nfunction recurGener(start = 0, end = 1, deep = 0, maxDeep = 6) {\n  const deepRandCoef = 0.2;\n\n  let middle = 2; \n  while(middle > 1) {\n    middle = start + (end - start) / 2 + (1 - 2.4 * Math.random()) * deepRandCoef;\n  }\n\n  const res = [middle];\n\n  if(deep < maxDeep) {\n    res.unshift(...recurGener(start, middle, deep + 1));\n    res.push(...recurGener(middle, end, deep + 1));\n  }\n  \n  return res;\n}\n\nconst ClientAccountScript = () => {\n  const [sum, setSum] = useState(100);\n  const [duration, setDuration] = useState(30);\n  const [start, setStart] = useState(Date.now());\n  const [isStartNow, setIsStartNow] = useState(true);\n  const [step, setStep] = useState(2);\n  const [profit, setProfit] = useState(3);\n  const [generatedScript, setGeneratedScript] = useState(null);\n\n  const { id } = useParams();\n  const you = useAuth();\n  const { email, trader } = useSelector(state => selectClientById(state, id)) || {};\n\n  const [addNewScript, {\n    isLoading, isError, isUninitialized, isSuccess\n  }] = useAddNewScriptMutation();\n\n  useEffect(() => {\n    if(generatedScript) {\n      handleGenerateScript();\n    }\n  }, [start, sum, duration, step, profit]);\n\n  useEffect(() => {\n    if(generatedScript) {\n      //console.log((generatedScript.list[1][0] - generatedScript.list[0][0]) / (60*1000));\n    }\n  }, [generatedScript]);\n  \n\n  const handleCreateNewScript = e => {\n    e.preventDefault();\n    \n    addNewScript(generatedScript);\n    //console.log(generatedScript);\n    resetGeneratedScript();\n  }\n  \n  const handleGenerateScript = e => {\n    if (e) e.preventDefault();\n    const info = {start, profit, duration, sum, step, creator: you, trader, clientEmail: email};\n    const list = generate(info)\n    //console.table({start:  isStartNow ? Date.now() : start.getTime(), profit, duration: +duration, sum: +sum, step});\n    setGeneratedScript({info, list});\n  }\n\n  const handleStartScript = e => {\n    e.preventDefault();\n  }\n\n  const resetGeneratedScript = () => {\n    setSum(100);\n    setDuration(30);\n    setStart(Date.now());\n    setIsStartNow(true);\n    setStep(2);\n    setProfit(3);\n    setGeneratedScript(null);\n  }\n\n  return (\n  <>\n    <form className=\"my-3\" onSubmit={handleCreateNewScript }>\n      <div className=\"row gy-2\">\n        <div className=\"col-lg-6\">\n          <div className=\"row\">\n            <div className=\"form-group col-lg-4\">\n              <div className=\"row p-0\">\n                <div className=\"col-lg-9 mx-0 pe-0\">\n                  <input \n                    id=\"sum\"\n                    type='number'\n                    className=\"form-control text-end\" \n                    onChange={e => setSum(+e.target.value)}\n                    value={sum}\n                    placeholder=\"100\" />\n                </div>\n                <label htmlFor=\"sum\" className=\"col-lg-3 col-form-label\">$</label>\n              </div>\n            </div>\n            <div className=\"form-group col-lg-4 \">\n              <div className=\"row p-0\">\n                <div className=\"col-lg-8 pe-0\">\n                  <input \n                    id=\"duration\"\n                    type='number'\n                    className=\"form-control text-end\" \n                    onChange={e => setDuration(+e.target.value)}\n                    value={duration}\n                    placeholder=\"10\" />\n                </div>\n                <label htmlFor=\"duration\" className=\"col-lg-4 col-form-label\">ч</label>\n              </div>\n            </div>\n            <div className=\"form-group col-lg-4\">\n              <div className=\"row p-0\">\n                <div className=\"col-lg-8 pe-0\">\n                  <input \n                    id=\"profit\"\n                    type='number'\n                    className=\"form-control text-end\" \n                    onChange={e => setProfit(+e.target.value)}\n                    value={profit}\n                    placeholder=\"3\" />\n                </div>\n                <label htmlFor=\"profit\" className=\"col-lg-4 col-form-label\">%</label>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"col-lg-6\">\n          <div className=\"row\">\n            <div className=\"col-lg-8\">\n              <h6>Дата и время старта</h6>\n            </div>\n            <div className=\"col-lg-4\">\n              <input className=\"checkbox me-1\" id=\"startNow\" type=\"checkbox\" checked={isStartNow} onChange={() => setIsStartNow(prev => {setStart(Date.now()); return !prev;}) } />\n              <label htmlFor=\"startNow\" style={{userSelect: 'none'}}className=\"label-checkbox\">сейчас</label>\n            </div>\n            <div className=\"form-group col-lg-12 \">\n              <input \n                type='datetime-local'\n                style={{display: isStartNow ? 'none' : 'block'}}\n                className=\"form-control\" \n                disabled={isStartNow}\n                onChange={e => {\n                  if(!e.target.value.length) return;\n                  setStart(toDate(e.target.value))\n                }}\n                value={toDateTimeLocale(start)}\n                placeholder=\"\" />\n            </div>\n          </div>\n        </div>\n        <div className=\"col-lg-12\">\n          <button \n            onClick={() => {\n              resetGeneratedScript();\n            }}\n\n            className=\"btn btn-danger float-end\"\n            disabled={generatedScript === null}\n            type=\"submit\">\n             отменить\n          </button>\n          <button \n            className=\"btn btn-dark text-bg-dark float-end me-2\"\n            onClick={handleGenerateScript}\n            type=\"button\">\n            Генерация\n          </button>\n          <button \n            className=\"btn btn-dark text-bg-dark float-end me-2\"\n            disabled={generatedScript === null}\n            type=\"submit\">\n            Запустить скрипт\n          </button>\n        </div>\n        <div className=\"col-lg-12\">\n        </div>\n      </div>\n    </form>\n    {\n      generatedScript && <Chart name=\"Сумма\" data={generatedScript?.list} />\n    }\n  </>\n  );\n}\n\nexport default ClientAccountScript;\n","import { useState, useEffect } from 'react';\nimport { useParams, Link, useNavigate } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport ClientAccountInfo from '../../../components/ClientAccountInfo';\nimport ClientAccountScript from '../../../components/ClientAccountScript';\nimport { useGetClientsQuery, selectClientById, selectClientsResult, selectAllClients, selectClientIds, useUpdateClientNewTraderMutation, useUpdateClientActivateMutation, useDeleteClientMutation } from '../../../features/admins/clientsApiSlice';\nimport { useGetAdminsQuery, selectAdminById, selectAdminsResult, selectAllAdmins, selectAdminIds } from '../../../features/admins/adminsApiSlice';\nimport { useAddNewScriptMutation, useGetScriptsQuery, selectScriptById } from '../../../features/scripts/scriptsApiSlice.js';\nimport useAuth from '../../../hooks/useAuth';\nimport Chart from '../../../components/Chart.js';\n\nconst ClientAccount = () => {\n  const { id } = useParams();\n  const you = useAuth();\n  const {\n    email,\n    firstname,\n    lastname,\n    createdAt,\n    updatedAt,\n    deleted,\n    scripts,\n  } = useSelector(state => selectClientById(state, id)) || {};\n  console.log(scripts);\n  return (\n  <div className=\"container \">\n    <div className=\"row\">\n      <div className=\"col-lg-12 container\">\n        <div className=\"row\">\n        { email &&  \n              <>\n          <div className=\"col-lg-8 container\">\n            <div className=\"row\">\n              <div className=\"col-lg-4 border border-dark overflow-hidden\">\n                <div className=\"col-lg-12 text-dark h5\">{(firstname || lastname) ? [firstname, lastname].join(\" \") : email }</div>\n              </div>\n              <div className=\"col-lg-4 border border-dark\">\n                <div className=\"col-lg-12 text-dark h5\">депозит</div>\n              </div>\n              <div className=\"col-lg-4 container border border-dark\">\n                <div className=\"row\">\n                  <div className=\"col-lg-6 text-dark h5\">создан:  </div>\n                  <div className=\"col-lg-6 text-dark\">{createdAt ? new Date(createdAt).toLocaleDateString(\"ru-RU\") : \"нет даных\"}</div>\n                </div>\n              </div>\n\n              <div className=\"col-lg-8 border border-dark\">KOSH</div>\n              <div className=\"container border border-dark col-lg-4\">\n                <div className=\"row\">\n                  <div className=\"col-lg-6 text-dark h5\">обновлён:  </div>\n                  <div className=\"col-lg-6 text-dark\">{updatedAt ? new Date(updatedAt).toLocaleDateString(\"ru-RU\") : \"нет даных\"}</div>\n                </div>\n              </div>\n              \n            </div>\n            <div className=\"col-lg-12\">\n            { \n              deleted ?\n              <h3 className=\"h3 my-4\">Удалён</h3> :\n              <ClientAccountScript />\n            }\n            {\n              scripts &&\n              scripts.length ? \n              <>\n                <h3 className=\"\">Список активных скриптов.</h3>\n                {scripts.map(script => {\n                  console.log(script);\n                  return <Chart name=\"Сумма\" data={script.list} />\n                })}\n              </>:\n              <p className=\"\">Список скриптов пустой.</p>\n            }\n            </div>\n          </div>\n          <div className=\"col-lg-4 container\">\n            <ClientAccountInfo />\n          </div>\n          </>\n          }\n        </div>\n      </div>\n      <Link to=\"/admin/home\">Назад к списку клентов</Link>\n    </div>\n  </div>\n  );\n}\n\nexport default ClientAccount;\n\n","const AdminsListPage = () => {\n  return (\n    <div>AdminsListPage</div>\n  );\n}\n\nexport default AdminsListPage;\n","const AdminAccount = () => {\n  return (\n    <div>AdminAccount</div>\n  );\n}\n\nexport default AdminAccount;\n\n","import { useState, useEffect } from 'react';\nimport { useAddNewAdminMutation } from '../../features/admins/adminsApiSlice';\nimport useAuth from '../../hooks/useAuth';\nimport { useNavigate } from 'react-router-dom';\n\nconst AdminCreate = () => {\n  const { roles } = useAuth()\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if(!roles.includes('superadmin')) {\n      navigate('/home');\n    }\n  }, [roles]);\n\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [adminRole, setAdminRole] = useState(true);\n  const [superadminRole, setSuperadminRole] = useState(false);\n\n  const [addNewAdmin, {\n    isLoading,\n    isSuccess,\n    isError,\n    error\n  }] = useAddNewAdminMutation();\n\n  const canSave = username.length >= 4 && password.length >= 8;\n  console.log(canSave);\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    console.log(username, password, adminRole, superadminRole);\n    if (canSave) {\n      try {\n        const { success } = await addNewAdmin({ username, password, adminRole, superadminRole }).unwrap()\n        setUsername('');\n        setPassword('');\n        setAdminRole(true);\n        setSuperadminRole(false);\n        navigate('/home');\n      }\n      catch (err) {\n        console.log(err)\n        setPassword('');\n      }\n    }\n  }\n\n  return (\n    <form onSubmit={e => handleSubmit(e)} className='form container'>\n      <div className=\"row\">\n        <div className=\"col-lg-4\">\n          <div className=\"form-group\">\n          <label htmlFor=\"username\">username</label>\n          <input \n            value={username}\n            onChange={e=>setUsername(e.target.value)}\n            id=\"username\" \n            type=\"text\" \n            autoComplete=\"off\" \n            required className={`form-control floating ${username.length && (username.length >= 4 ? 'is-valid' : 'is-invalid' )}`} />\n          </div>\n          <div className=\"form-group\">\n          <label htmlFor=\"password\">password</label>\n          <input \n            value={password}\n            onChange={e=>setPassword(e.target.value)}\n            id=\"password\" \n            type=\"text\" \n            autoComplete=\"off\" \n            required \n            required className={`form-control floating mb-3 ${password.length && (password.length >= 8 ? 'is-valid' : 'is-invalid' )}`} />\n          </div>\n          <div className=\"d-flex justify-content-around\">\n            <div className=\"form-check\">\n              <input \n                checked={superadminRole || adminRole}\n                onChange={e => setAdminRole(e.target.checked)}\n                id=\"checkAdmin\" \n                type=\"checkbox\" \n                disabled={true}\n                className=\"form-check-input\" />\n              <label htmlFor=\"checkAdmin\" className=\"form-check-label\">admin</label>\n            </div>\n            <div className=\"form-check\">\n              <input \n                checked={superadminRole}\n                onChange={e => setSuperadminRole(e.target.checked)}\n                id=\"checkSuperadmin\" \n                type=\"checkbox\" \n                className=\"form-check-input\" />\n              <label htmlFor=\"checkSuperadmin\" className=\"form-check-label\">superadmin</label>\n            </div>\n          </div>\n          <button type=\"submit\" className=\"btn btn-warning mt-3\" disabled={!canSave}>создать</button>\n        </div>\n      </div>\n    </form>\n  );\n}\n\nexport default AdminCreate;\n","import { Routes, Route, Navigate, Link } from 'react-router-dom';\n\nimport AdminHome from './AdminHome';\nimport AdminAppLayout from './AdminAppLayout.js';\nimport ClientsListPage from './dashboard/ClientsListPage.js';\nimport ClientAccount from './dashboard/ClientAccount.js';\nimport AdminsListPage from './dashboard/AdminsListPage.js';\nimport AdminAccount from './dashboard/AdminAccount.js';\nimport AdminCreate from './AdminCreate.js';\n\n//import RegisterForm from '../../features/auth/RegisterForm.js';\nimport Layout from '../../components/Layout';\n\nconst AdminApp = () => {\n  return (\n    <Routes>\n      <Route path=\"/*\" element={<AdminAppLayout />}>\n        <Route index element={<Link to=\"/home\">Home</Link>} />\n        <Route path=\"home\" element={<AdminHome />} />\n        <Route path=\"clients\" element={<ClientsListPage />} />\n        <Route path=\"clients/:id\" element={<ClientAccount />} />\n        \n        <Route path=\"admins\" element={<AdminsListPage />} />\n        <Route path=\"admins/:username\" element={<AdminAccount />} />\n        <Route path=\"admins/create\" element={<AdminCreate />} />\n\n        <Route path=\"*\" element={<Navigate to=\"/\" replace />} />\n      </Route>\n    </Routes>\n  );\n};\n\nexport default AdminApp;\n\n","const Footer = () => {\n  return (\n    <footer>\n       тут что-нибудь?(footer)\n    </footer>\n  )\n}\n\nexport default Footer;\n","import { useRef, useState, useEffect } from 'react'\nimport { useNavigate, Link } from 'react-router-dom'\nimport { useDispatch } from 'react-redux'\nimport { setCredentials } from './authSlice'\nimport { useLoginMutation } from './authApiSlice'\nimport usePersist from '../../hooks/usePersist'\nimport useTitle from '../../hooks/useTitle'\nimport PulseLoader from 'react-spinners/PulseLoader'\n\nconst Login = () => {\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [errMsg, setErrMsg] = useState('')\n  const [persist, setPersist] = usePersist()\n\n  const userRef = useRef()\n  const errRef = useRef()\n\n  const navigate = useNavigate()\n  const dispatch = useDispatch()\n\n  const [login, { isLoading }] = useLoginMutation()\n\n  useEffect(() => {\n    userRef.current.focus()\n  }, [])\n\n  useEffect(() => {\n    setErrMsg('');\n  }, [username, password])\n\n  const handleSubmit = async (e) => {\n    e.preventDefault()\n    try {\n      const { accessToken } = await login({ username, password }).unwrap()\n      dispatch(setCredentials({ accessToken }))\n      setUsername('')\n      setPassword('')\n      navigate('/home')\n    } catch (err) {\n      if (!err.status) {\n        setErrMsg('No Server Response');\n      } else if (err.status === 400) {\n        setErrMsg('Missing Username or Password');\n      } else if (err.status === 401) {\n        setErrMsg('Unauthorized');\n      } else {\n        setErrMsg(err.data?.message);\n      }\n      //errRef.current.focus();\n    }\n  }\n\n  const handleUserInput = (e) => setUsername(e.target.value)\n  const handlePwdInput = (e) => setPassword(e.target.value)\n  const handleToggle = () => setPersist(prev => !prev)\n\n  const errClass = errMsg ? \"errmsg\" : \"offscreen\"\n\n  if (isLoading) return <PulseLoader color={\"#FFF\"} />\n\n  const content = (\n    <section className=\"public\">\n      <p ref={errRef} className={errClass} aria-live=\"assertive\">{errMsg}</p>\n\n      <form className=\"form\" onSubmit={handleSubmit}>\n        <label htmlFor=\"username\">логин: </label>\n        <input\n          className=\"form__input\"\n          type=\"text\"\n          id=\"username\"\n          ref={userRef}\n          value={username}\n          onChange={handleUserInput}\n          autoComplete=\"off\"\n          required\n        />\n\n        <label htmlFor=\"password\">пароль: </label>\n        <input\n          className=\"form__input\"\n          type=\"password\"\n          id=\"password\"\n          onChange={handlePwdInput}\n          value={password}\n          required\n        />\n        <button className=\"form__submit-button\">Войти</button>\n\n        <label htmlFor=\"persist\" className=\"form__persist\">\n          <input\n            type=\"checkbox\"\n            className=\"form__checkbox\"\n            id=\"persist\"\n            onChange={handleToggle}\n            checked={persist}\n          />\n          запомнить меня\n        </label>\n      </form>\n    </section>\n  )\n\n  return content\n}\nexport default Login\n"],"names":["Header","username","roles","useAuth","navigate","useNavigate","accountPanel","setAccountPanel","useState","isOpen","sendLogout","isLoading","isSuccess","isError","error","useSendLogoutMutation","useEffect","console","log","setPersist","_jsxs","children","_jsx","Link","to","_Fragment","onClick","prev","className","title","_ref","admin","a","adminsAdapter","createEntityAdapter","initialState","getInitialState","adminsApiSlice","apiSlice","injectEndpoints","endpoints","builder","getAdmins","query","validateStatus","response","result","status","transformResponse","responseData","loadedAdmins","map","id","_id","setAll","providesTags","arg","ids","type","addNewAdmin","mutation","initialAdminData","url","method","body","invalidatesTags","updateAdmin","deleteAdmin","useGetAdminsQuery","useAddNewAdminMutation","useUpdateAdminMutation","useDeleteAdminMutation","selectAdminsResult","select","selectAdminsData","createSelector","adminsResult","data","selectAll","selectAllAdmins","selectById","selectAdminById","selectIds","selectAdminIds","getSelectors","state","_selectAdminsData","DashAdminsList","you","admins","useSelector","AdminItemList","includes","name","client","Object","keys","filter","key","match","firstname","lastname","email","createdAt","Date","toLocaleDateString","updatedAt","DashClientsList","clients","selectAllClients","ClientItemList","Dashboard","AdminHome","AdminAppLayout","Outlet","Footer","ClientsListPage","ClientAccountInfo","useParams","phone","trader","active","deleted","selectClientById","isEdit","setIsEdit","newTrader","setNewTrader","scriptTime","setScriptTime","scriptProfit","setScriptProfit","updateClientNewTrader","isUninitialized","useUpdateClientNewTraderMutation","scope","onChange","e","target","value","disabled","i","style","border","preventDefault","newDataReady","deleteClient","memo","alias","useRef","ApexCharts","exec","chartOptions","chart","animations","enabled","toolbar","show","zoom","stroke","curve","lineCap","colors","undefined","width","dashArray","xaxis","tickAmount","yaxis","text","labels","formatter","val","toFixed","length","ApexChart","height","series","item","d","getTimezoneOffset","toISOString","slice","options","generate","sum","profit","duration","step","start","now","durMs","fsum","startMs","points","recurGener","unshift","push","p","arguments","end","deep","maxDeep","middle","Math","random","res","ClientAccountScript","setSum","setDuration","setStart","isStartNow","setIsStartNow","setStep","setProfit","generatedScript","setGeneratedScript","addNewScript","useAddNewScriptMutation","handleGenerateScript","info","creator","clientEmail","list","resetGeneratedScript","onSubmit","placeholder","htmlFor","checked","userSelect","display","dstr","getTime","Chart","ClientAccount","scripts","join","script","AdminsListPage","AdminAccount","AdminCreate","setUsername","password","setPassword","adminRole","setAdminRole","superadminRole","setSuperadminRole","canSave","async","success","unwrap","err","handleSubmit","autoComplete","required","AdminApp","Routes","Route","path","element","index","Navigate","replace","Login","errMsg","setErrMsg","persist","usePersist","userRef","errRef","dispatch","useDispatch","login","useLoginMutation","current","focus","errClass","PulseLoader","color","ref","accessToken","setCredentials","_err$data","message","handleToggle"],"sourceRoot":""}