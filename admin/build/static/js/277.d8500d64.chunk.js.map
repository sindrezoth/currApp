{"version":3,"file":"static/js/277.d8500d64.chunk.js","mappings":"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","sources":["components/Header.js","apps/admin/dashboard/AdminItemList.js","features/admins/adminsApiSlice.js","apps/admin/dashboard/DashAdminsList.js","apps/admin/dashboard/ClientItemList.js","apps/admin/dashboard/DashClientsList.js","apps/admin/dashboard/Dashboard.js","apps/admin/AdminHome.js","apps/admin/AdminAppLayout.js","apps/admin/dashboard/ClientsListPage.js","components/clientAccount/ClientAccountInfo.js","components/Chart.js","components/clientAccount/ClientAccountNewScript.js","components/clientAccount/ClientAccountScriptListItem.js","components/clientAccount/ClientAccountScriptList.js","apps/admin/dashboard/ClientAccount.js","apps/admin/dashboard/AdminsListPage.js","apps/admin/dashboard/AdminAccount.js","apps/admin/AdminCreate.js","apps/admin/AdminApp.js","components/Footer.js","features/auth/Login.js"],"sourcesContent":["import { useNavigate, Link, useLocation } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport useAuth from '../hooks/useAuth.js';\nimport { useSendLogoutMutation } from '../features/auth/authApiSlice'\nimport Login from '../features/auth/Login.js';\n\nconst Header = () => {\n  const { username, roles } = useAuth();\n  const navigate = useNavigate();\n\n  const [accountPanel, setAccountPanel] = useState({\n    isOpen: false,\n  });\n  \n  const [sendLogout, {\n    isLoading,\n    isSuccess,\n    isError,\n    error\n  }] = useSendLogoutMutation();\n\n  useEffect(() => {\n    if (isSuccess) {\n      console.log('sooo?');\n      setPersist(false);\n\n      //navigate('/')\n    }\n  }, [isSuccess, navigate]);\n\n  return (\n    <header>\n      <Link to=\"/\"><h1>Админка</h1></Link>\n      {\n        username ? \n          <nav>\n            <ul>\n              <li><Link to=\"/home\">Home</Link></li>\n            </ul>\n          </nav>\n        : null\n      }\n      {\n         username ? accountPanel.isOpen ? \n          <>\n            <button onClick={() => setAccountPanel(prev => ({...prev, isOpen: !prev.isOpen}))}>Закрыть</button>\n            <button\n              className=\"icon-button\"\n              title=\"Выйти\"\n              onClick={() => {\n                sendLogout()\n              }}\n            >\n              Выйти</button>\n            \n          </>\n        : \n          <button onClick={() => setAccountPanel(prev => ({...prev, isOpen: !prev.isOpen}))}>\n            <div>{username}</div>\n          </button>\n        : null\n      }\n    </header>\n  );\n}\n\nexport default Header;\n","import { Link } from 'react-router-dom';\nimport useAuth from '../../../hooks/useAuth';\n\nconst AdminItemList = ({admin}) => {\n  const a = useAuth();\n\n  return (\n    <>\n      {\n        <li>\n          <Link to={\"/admins/\" + admin.username}>\n            <div className=\"container border\">\n              <div className=\"row\">\n                <div className=\"col-lg-12 col-md-12 d-flex justify-content-between border\">\n                  <span>{admin.username}</span>\n                  {admin.username === a.username && <span>вы</span> }\n                </div>\n              </div>\n            </div>\n          </Link>\n        </li>\n      }\n    </>\n  );\n}\n//            <div className=\"col-lg-3 col-md-6 border\">\n//              <p className=\"\">депозит</p>\n//            </div>\n//            <div className='col-lg-3 col-md-12 border'>\n//              {admin?.createdAt && \n//                <div className=\"border\">{new Date(admin.createdAt).toLocaleDateString(\"ru-RU\")}</div>}\n//            </div>\n//            <div className={`col-lg-2 ${true ? \"bg-danger\" : \"bg-success\"}`}>\n//\n//            </div>\n//          </div>\n//          <div className=\"row\">\n//            <div className=\"col-lg-7 border\">\n//              <p>KOSH</p>\n//            </div>\n//            <div className='col-lg-3 col-md-12 border'>\n//              {admin?.updatedAt && \n//                <div className=\"border\">{new Date(admin.createdAt).toLocaleDateString(\"ru-RU\")}</div>}\n//            </div>\n//          </div>\n//        </div>\n//\n//      </Link>\n//    </ul>\n//  </div>\n//  );\n//}\n\nexport default AdminItemList;\n","import {\n  createSelector,\n  createEntityAdapter\n} from \"@reduxjs/toolkit\";\nimport { apiSlice } from \"../../app/api/apiSlice\"\n\nconst adminsAdapter = createEntityAdapter({})\n\nconst initialState = adminsAdapter.getInitialState()\n\nexport const adminsApiSlice = apiSlice.injectEndpoints({\n  endpoints: builder => ({\n    getAdmins: builder.query({\n      query: () => '/admins',\n      validateStatus: (response, result) => {\n        return response.status === 200 && !result.isError\n      },\n      transformResponse: responseData => {\n        const loadedAdmins = responseData.map(admin => {\n          admin.id = admin._id\n          return admin\n        });\n        //console.log(loadedAdmins)\n        return adminsAdapter.setAll(initialState, loadedAdmins);\n      },\n      providesTags: (result, error, arg) => {\n        //console.log(result);\n        if (result?.ids) {\n          return [\n            { type: 'Admin', id: 'LIST' },\n            ...result.ids.map(id => ({ type: 'Admin', id }))\n          ]\n        } else return [{ type: 'Admin', id: 'LIST' }]\n      }\n    }),\n    addNewAdmin: builder.mutation({\n      query: initialAdminData => ({\n        url: '/admins',\n        method: 'POST',\n        body: {\n          ...initialAdminData,\n        }\n      }),\n      invalidatesTags: [\n        { type: 'Admin', id: \"LIST\" }\n      ]\n    }),\n    updateAdmin: builder.mutation({\n      query: initialAdminData => ({\n        url: '/admins',\n        method: 'PATCH',\n        body: {\n          ...initialAdminData,\n        }\n      }),\n      invalidatesTags: (result, error, arg) => [\n        { type: 'Admin', id: arg.id }\n      ]\n    }),\n    deleteAdmin: builder.mutation({\n      query: ({ id }) => ({\n        url: `/admins`,\n        method: 'DELETE',\n        body: { id }\n      }),\n      invalidatesTags: (result, error, arg) => [\n        { type: 'Admin', id: arg.id }\n      ]\n    }),\n  }),\n})\n\nexport const {\n  useGetAdminsQuery,\n  useAddNewAdminMutation,\n  useUpdateAdminMutation,\n  useDeleteAdminMutation,\n} = adminsApiSlice;\n\n// returns the query result object\nexport const selectAdminsResult = adminsApiSlice.endpoints.getAdmins.select();\n\n// creates memoized selector\nconst selectAdminsData = createSelector(\n  selectAdminsResult,\n  adminsResult => adminsResult.data // normalized state object with ids & entities\n);\n\n//getSelectors creates these selectors and we rename them with aliases using destructuring\nexport const {\n  selectAll: selectAllAdmins,\n  selectById: selectAdminById,\n  selectIds: selectAdminIds\n  // Pass in a selector that returns the admins slice of state\n} = adminsAdapter.getSelectors(state => selectAdminsData(state) ?? initialState);\n","import { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport AdminItemList from './AdminItemList.js';\nimport { selectAdminsResult, useGetAdminsQuery, selectAllAdmins } from '../../../features/admins/adminsApiSlice.js';\nimport { apiSlice } from '../../../app/api/apiSlice'\nimport useAuth from '../../../hooks/useAuth';\n\nconst DashAdminsList = () => {\n  const you = useAuth();\n  const admins = useSelector(selectAllAdmins);\n\n  console.log(admins);\n\n  return (\n    <div className=\"\">\n      <h3>Список админов</h3>\n      <ul>\n      {\n        //(!isLoading && isSuccess) && \n        admins?.map((admin) => {\n          return <><AdminItemList key={admin.id} admin={{...admin}}/><hr/></>\n        })\n      }\n      </ul>\n      {you.roles.includes('superadmin') && <Link to=\"/admins/create\" className=\"btn btn-primary border rounded-50\" name=\"Добавить админа\">+</Link> }\n    </div>\n  );\n}\n//            <div className=\"col-lg-3 col-md-6 border\">\n//              <p className=\"\">депозит</p>\n//            </div>\n//            <div className='col-lg-3 col-md-12 border'>\n//              {admin?.createdAt && \n//                <div className=\"border\">{new Date(admin.createdAt).toLocaleDateString(\"ru-RU\")}</div>}\n//            </div>\n//            <div className={`col-lg-2 ${true ? \"bg-danger\" : \"bg-success\"}`}>\n//\n//            </div>\n//          </div>\n//          <div className=\"row\">\n//            <div className=\"col-lg-7 border\">\n//              <p>KOSH</p>\n//            </div>\n//            <div className='col-lg-3 col-md-12 border'>\n//              {admin?.updatedAt && \n//                <div className=\"border\">{new Date(admin.createdAt).toLocaleDateString(\"ru-RU\")}</div>}\n//            </div>\n//          </div>\n//        </div>\n//\n//      </Link>\n//    </ul>\n//  </div>\n//  );\n//}\n\nexport default DashAdminsList;\n","import { Link } from 'react-router-dom';\n\nconst ClientItemList = ({ client }) => {\n  const clientKeys = Object.keys(client).filter(key => !key.match(/_/g));\n//console.log(Object.keys(client).filter(key => !key.match(/_/g)));\n\n  console.log(client)\n\n  return (\n    <>\n      {\n      <li>\n        <Link to={\"/clients/\" + client.id}>\n            <div className=\"container border\">\n              <div className=\"row\">\n                <div className=\"col-lg-4 col-md-6 border\">\n                  {(client?.firstname || client?.lastname) ? \n                    <p>{client.firstname} {client.lastname}</p> :\n                    <p>{client.email}</p>\n                  }\n                </div>\n                <div className=\"col-lg-3 col-md-6 border\">\n                  <p className=\"\">депозит</p>\n                </div>\n                <div className='col-lg-3 col-md-12 border'>\n                  {client?.createdAt && \n                    <div className=\"border\">{new Date(client.createdAt).toLocaleDateString(\"ru-RU\")}</div>}\n                </div>\n                <div className={`col-lg-2 ${client.scripts && client.scripts.length && client.scripts.some(({info}) => info.start + info.duration < Date.now()) ? \"bg-success\" : \"bg-danger\"}`}>\n                      \n                </div>\n              </div>\n              <div className=\"row\">\n                <div className=\"col-lg-7 border\">\n                  <p>KOSH</p>\n                </div>\n                <div className='col-lg-3 col-md-12 border'>\n                  {client?.updatedAt && \n                    <div className=\"border\">{new Date(client.updatedAt).toLocaleDateString(\"ru-RU\")}</div>}\n                </div>\n              </div>\n            </div>\n\n        </Link>\n      </li>\n\n      }\n    </>\n  );\n}\n\nexport default ClientItemList;\n","import { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport ClientItemList from './ClientItemList.js';\nimport { selectClientsResult, useGetClientsQuery, selectAllClients } from '../../../features/admins/clientsApiSlice.js';\nimport { apiSlice } from '../../../app/api/apiSlice'\n\nconst DashClientsList = () => {\n  const clients = useSelector(selectAllClients);\n\n  return (\n    <>\n      {\n        clients?.map((client) => <><ClientItemList key={client.id} client={{...client}}/><hr/></>)\n      }\n    </>\n  );\n}\n\nexport default DashClientsList;\n","import DashAdminsList from './DashAdminsList.js';\nimport DashClientsList from './DashClientsList.js';\n\nconst Dashboard = () => {\n  return (\n    <>\n      <h2>Dashboard</h2>\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-lg-8 border border-dark\">\n            <DashClientsList />\n          </div>\n          <div className=\"col-lg-4 border border-dark\">\n            <DashAdminsList />\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default Dashboard;\n","import { useEffect } from 'react';\nimport { useNavigate, Link, useLocation } from 'react-router-dom';\nimport useAuth from '../../hooks/useAuth.js';\n\nimport Dashboard from './dashboard/Dashboard.js';\n\nconst AdminHome = () => {\n  const { username } = useAuth();\n\n  return (\n    <main>\n      <Dashboard />\n    </main>\n  );\n}\n\nexport default AdminHome;\n\n\n","import { Outlet } from 'react-router-dom';\nimport Header from '../../components/Header.js';\nimport Footer from '../../components/Footer.js';\n\nconst AdminAppLayout = () => {\n  return (\n    <>\n      <Header />\n      <div>\n        <Outlet />\n      </div>\n      <Footer />\n    </>\n  );\n}\n\nexport default AdminAppLayout;\n","const ClientsListPage = () => {\n  return (\n    <div>ClientsListPage</div>\n  );\n}\n\nexport default ClientsListPage;\n","import { useState, useEffect } from 'react';\nimport { useParams, Link, useNavigate } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { \n  selectClientById, \n  useUpdateClientNewTraderMutation, \n  useDeleteClientMutation \n} from 'src/features/admins/clientsApiSlice';\nimport { selectAllAdmins, selectAdminIds } from 'src/features/admins/adminsApiSlice';\nimport useAuth from 'src/hooks/useAuth';\n\nconst ClientAccountInfo = () => {\n  const { id } = useParams();\n  const you = useAuth();\n  const {\n    firstname,\n    lastname,\n    email,\n    phone,\n    createdAt,\n    updatedAt,\n    trader,\n    active,\n    deleted,\n  } = useSelector(state => selectClientById(state, id)) || {};\n  const admins = useSelector(state => selectAllAdmins(state));\n  const [isEdit, setIsEdit] = useState(false);\n\n  const [newTrader, setNewTrader] = useState(\"\");\n  const [scriptTime, setScriptTime] = useState(\"\");\n  const [scriptProfit, setScriptProfit] = useState(\"\");\n\n  const navigate = useNavigate();\n  const [\n    updateClientNewTrader, \n    { isLoading, isError, isUninitialized, isSuccess }\n  ] = useUpdateClientNewTraderMutation();\n\n  useEffect(() => {\n    setNewTrader(trader);\n  }, [trader]);\n\n  //\n  //console.log(newTrader);\n  const [\n    deleteClient, \n    deleteClientState \n  ] = useDeleteClientMutation ();\n\n  const handleSetTrader = e => {\n    //console.log(e.target.value);\n    setNewTrader(e.target.value);\n  }\n\n  const handleUpdateClientNewTrader = e => {\n    e.preventDefault();\n    updateClientNewTrader({ id, trader: newTrader, active })\n    setIsEdit(false);\n  }\n  const handleDeactivateClient = e => {\n    e.preventDefault();\n    updateClientActivate({ id, active })\n  }\n  const handleDeleteClient = e => {\n    e.preventDefault();\n    deleteClient({ id })\n  }\n\n  return (\n    <>\n    <table className=\"table table-striped\">\n      <thead>\n      </thead>\n      <tbody>\n        <tr>\n          <th scope=\"row\">ID</th>\n          <td>{id}</td>\n        </tr>\n        <tr>\n          <th>имя: </th>\n          <td>{firstname}</td>\n        </tr>\n        <tr>\n          <th>фамилия: </th>\n          <td>{lastname}</td>\n        </tr>\n        <tr>\n          <th>телефон: </th>\n          <td>{phone}</td>\n        </tr>\n        <tr>\n          <th>почта: </th>\n          <td>{email}</td>\n        </tr>\n        <tr>\n          <th>депозит: </th>\n          <td>{\"deposit\"}</td>\n        </tr>\n        <tr>\n          <th>кош: </th>\n          <td>{\"кошелёк\"}</td>\n        </tr>\n        <tr>\n          <th>трейдер: </th>\n          <td>\n            <select \n              onChange={handleSetTrader} \n              value={ newTrader && newTrader.username || \"\" } \n              className=\"form-select\" \n              aria-label=\"назначить тредера\"\n              disabled={deleted || !isEdit}\n            >\n              <option value={\"\"}>назначить трейдера</option>\n              {\n                admins.map((admin, i) => \n                  <option \n                    key={`option${admin.username}`}\n                    style={{border: '1px solid red'}}\n                    className={(admin.username === you.username ? 'text-primary' : '') + (i % 2 == 0 && ' bg-light')} \n                    value={admin.username}\n                  >\n                    {admin.username} {admin.username === you.username ? 'вы' : ''}\n                  </option>)\n              }\n            </select>\n          </td>\n        </tr>\n        <tr>\n          <th>активний: </th>\n          <td>{active ? \"да\" : \"нет\"}</td>\n        </tr>\n        <tr>\n          <th>удалён: </th>\n          <td>{deleted ? \"да\" : \"нет\"}</td>\n        </tr>\n        <tr>\n          <th scope=\"row\">обновлён:</th>\n          <td>{new Date(updatedAt).toLocaleDateString(\"ru-RU\")}</td>\n        </tr>\n        <tr>\n          <th scope=\"row\">создан:</th>\n          <td>{new Date(createdAt).toLocaleDateString(\"ru-RU\")}</td>\n        </tr>\n      </tbody>\n    </table>\n    <div className=\"row\">\n      {!isEdit ? <div className=\"col-6\">\n        <button\n          onClick={()=>setIsEdit(true)} \n          className={`btn ${deleted ? \"btn-muted\" : \"btn-primary\"}`} \n          disabled={deleted}\n        >редактировать</button>\n      </div> : \n        <div className=\"btn-group col-6\">\n          <button\n            onClick={handleUpdateClientNewTrader} \n            className={`btn ${deleted ? \"btn-muted\" : \"btn-primary\"}`} \n            disabled={deleted }\n          >сохранить</button>\n          <button\n            onClick={()=>setIsEdit(false)} \n            className={`btn ${deleted ? \"btn-muted\" : \"btn-warning\"}`} \n            disabled={deleted}\n          >отменить</button>\n        </div>}\n      <div className=\"col-6\">\n        <div className=\"float-end btn-group\">\n          <button \n            onClick={handleDeleteClient} \n            className={`btn ${deleted ? \"btn-muted\" : \"btn-danger\"}`} \n            disabled={deleted}\n          >Удалить</button>\n        </div>\n      </div>\n    </div>\n    </>\n  );\n}\n\nexport default ClientAccountInfo;\n","import React, { useEffect, useState, useRef, memo } from 'react';\nimport ApexChart from 'react-apexcharts';\nimport ApexCharts from 'apexcharts';\n\nconst toDateTimeLocale = d => new Date(d - new Date().getTimezoneOffset() * 60000)//.toISOString().slice(0, -8);\n\nconst Chart = memo(function Chart({ script, compute }) {\n  const { id, list: data } = script;\n\n  let newData = datamapped(data);\n  useEffect(() => {\n    if(!compute) return;\n    let i = setInterval(() => {\n      const updated = datamapped(data);\n      if(JSON.stringify(newData) !== JSON.stringify(updated)){\n        newData = updated;\n\n        ApexCharts.exec(`${id}`, 'updateSeries', newData, true);\n        ApexCharts.exec(`${id}`, 'updateOptions', chartOptions(id, newData), false, true);\n      }\n    }, 1000)\n\n    return () => clearInterval(i);\n  }, [newData])\n\n  return (\n    <div className=\"col-xxl-12 col-xl-12 col-lg-12\">\n      <div className={`price-widget`}>\n        <div id=\"chart\">\n          {!data?.length > 0 ? <p className='text-center text-white t-3'>Chart is loading...</p> : \n            <ApexChart\n              type=\"line\"\n              series={datamapped(data)}\n              options={chartOptions(id, newData)}\n            />\n          }\n        </div>\n      </div>\n    </div>\n  );\n\n}, (prev, next) => JSON.stringify(prev) === JSON.stringify(next)); \n\nexport default Chart;\n\nfunction datamapped (data) {\n  return data.reduce((datas, next, i, arr) => {\n    if (next[0] < Date.now()) {\n      datas[0].data.push([toDateTimeLocale(next[0]), next[1]])\n      if(arr[i+1] && arr[i+1][0] >= Date.now()) {\n        datas[1].data.push([toDateTimeLocale(next[0]), next[1]]);\n      }\n    }\n    else {\n      datas[1].data.push([toDateTimeLocale(next[0]), next[1]]);\n    }\n\n    return datas;\n  }, [{name: 'Видит клиент', data: []}, {name: 'Увидит клиент', data: []}]);\n};\n\nfunction chartOptions (id, data) {\n  return {\n    chart: { \n      id: id.toString(), \n      type: 'line',\n\n      animations: { \n        enabled: false, \n        dynamicAnimation: {\n          enabled: false\n        }\n      }, \n      toolbar: { show: false }, \n      zoom: { enabled: false } ,\n    },\n    colors: [\n      '#006055', '#df2450'\n    ] ,\n    markers: {\n      size: 0.0001,\n      discrete: [{\n        seriesIndex: 0,\n        dataPointIndex: data[0].data.length - 1,\n        fillColor: '#03a383',\n        strokeColor: '#fff',\n        size: 10,\n        shape: \"circle\"\n      }]\n    },\n    stroke: {\n      curve: 'smooth',\n      width: 3,\n      colors: [\n        '#006055', '#df2450'\n      ] ,\n    },\n\n    tooltip: {\n      theme: 'light',\n      insersect: false\n    },\n    xaxis: { \n      type: 'datetime',\n      tickAmount: 12, \n    },\n    yaxis: { \n      type: 'numeric', \n      title: { text: 'Price (USDT)' },\n      labels: { \n        formatter: (val) => val.toFixed(2)\n      }\n    }\n  };\n};\n","import { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport Chart from '../Chart.js';\nimport { useAddNewScriptMutation } from 'src/features/scripts/scriptsApiSlice.js';\nimport useAuth from '../../hooks/useAuth.js';\nimport { \n  selectClientById, \n  useUpdateClientNewTraderMutation, \n  useUpdateClientActivateMutation, \n  useDeleteClientMutation \n} from '../../features/admins/clientsApiSlice';\n\nconst ClientAccountNewScript = () => {\n  const [isCreatingScript, setIsCreatingScript] = useState(false);\n  const [sum, setSum] = useState(100);\n  const [duration, setDuration] = useState(1800000);\n  const [start, setStart] = useState(Date.now());\n  const [isStartNow, setIsStartNow] = useState(true);\n  const [step, setStep] = useState(2);\n  const [profit, setProfit] = useState(0.03);\n  const [generatedScript, setGeneratedScript] = useState(null);\n\n  const { id } = useParams();\n  const you = useAuth();\n  const { email, traderId, trader } = useSelector(state => selectClientById(state, id)) || {};\n\n  const [addNewScript, {\n    isLoading, isError, isUninitialized, isSuccess\n  }] = useAddNewScriptMutation();\n\n  useEffect(() => {\n    if(generatedScript) {\n      handleGenerateScript();\n    }\n  }, [start, sum, duration, step, profit]);\n\n  const handleCreateNewScript = e => {\n    e.preventDefault();\n    \n    addNewScript(generatedScript);\n    resetGeneratedScript();\n    setIsCreatingScript(false);\n  }\n  \n  const handleGenerateScript = e => {\n    if (e) e.preventDefault();\n    const info = {\n      id: 'newScript',\n      start: isStartNow ? Date.now() : start, \n      profit, \n      duration, \n      sum, \n      step, \n      creator: you, \n      creatorId: you, \n      trader, \n      traderId: trader._id, \n      clientEmail: email,\n      clientId: id\n\n    };\n    const list = generate(info)\n    setGeneratedScript({id, info, list });\n  }\n\n  const resetGeneratedScript = () => {\n    setSum(100);\n    setDuration(30*60000);\n    setStart(Date.now());\n    setIsStartNow(true);\n    setStep(2);\n    setProfit(0.03);\n    setGeneratedScript(null);\n  }\n\n  return (\n    isCreatingScript ? <>\n    \n    <form className=\"my-3\" onSubmit={handleCreateNewScript }>\n      <div className=\"row gy-2\">\n        <div className=\"col-lg-6\">\n          <div className=\"row\">\n            <div className=\"form-group col-4\">\n              <div className=\"row p-0\">\n                <div className=\"col-6 col-lg-9 mx-0 pe-0\">\n                  <input \n                    id=\"sum\"\n                    type='number'\n                    className=\"form-control text-end\" \n                    onChange={e => setSum(+e.target.value)}\n                    value={sum === 0 ? '' : sum}\n                    placeholder=\"100\" />\n                </div>\n                <label htmlFor=\"sum\" className=\"col-6 col-lg-3 col-form-label\">$</label>\n              </div>\n            </div>\n            <div className=\"form-group col-4 \">\n              <div className=\"row p-0\">\n                <div className=\"col-6 col-lg-8 pe-0\">\n                  <input \n                    id=\"duration\"\n                    type='number'\n                    className=\"form-control text-end\" \n                    onChange={e => setDuration(e.target.value*60*60000)}\n                    step=\"0.5\"\n                    value={duration === 0 ? '' : duration/60000/60}\n                    placeholder=\"10\" />\n                </div>\n                <label htmlFor=\"duration\" className=\"col-6 col-lg-4 col-form-label\">ч</label>\n              </div>\n            </div>\n            <div className=\"form-group col-4\">\n              <div className=\"row p-0\">\n                <div className=\"col-6 col-lg-8 pe-0\">\n                  <input \n                    id=\"profit\"\n                    type='number'\n                    className=\"form-control text-end\" \n                    onChange={e => setProfit(+e.target.value / 100)}\n                    value={profit === 0 ? '' : Math.round(profit * 100)}\n                    placeholder=\"3\" />\n                </div>\n                <label htmlFor=\"profit\" className=\"col-6 col-lg-4 col-form-label\">%</label>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"col-lg-6\">\n          <div className=\"row\">\n            <div className=\"col-lg-8\">\n              <h6>Дата и время старта</h6>\n            </div>\n            <div className=\"col-lg-4\">\n              <input className=\"checkbox me-1\" id=\"startNow\" type=\"checkbox\" checked={isStartNow} onChange={() => setIsStartNow(prev => {setStart(Date.now()); return !prev;}) } />\n              <label htmlFor=\"startNow\" style={{userSelect: 'none'}}className=\"label-checkbox\">сейчас</label>\n            </div>\n            <div className=\"form-group col-lg-12 \">\n              <input \n                type='datetime-local'\n                style={{display: isStartNow ? 'none' : 'block'}}\n                className=\"form-control\" \n                disabled={isStartNow}\n                onChange={e => {\n                  if(!e.target.value.length) return;\n                  setStart(toDate(e.target.value))\n                }}\n                value={toDateTimeLocale(start)}\n                placeholder=\"\" />\n            </div>\n          </div>\n        </div>\n        <div className=\"col-lg-12\">\n          <button \n            onClick={() => {\n              resetGeneratedScript();\n              setIsCreatingScript(false);\n            }}\n\n            className=\"btn btn-danger float-end\"\n            disabled={generatedScript === null}\n            type=\"submit\">\n             отменить\n          </button>\n          <button \n            className=\"btn btn-dark text-bg-dark float-end me-2\"\n            onClick={handleGenerateScript}\n            type=\"button\">\n            Генерация\n          </button>\n          <button \n            className=\"btn btn-dark text-bg-dark float-end me-2\"\n            disabled={generatedScript === null}\n            type=\"submit\">\n            Запустить скрипт\n          </button>\n        </div>\n        <div className=\"col-lg-12\">\n        </div>\n      </div>\n    </form>\n    {\n      <div className=\"col-12\">\n       {isCreatingScript && generatedScript && <Chart script={generatedScript} compute={false}/>}\n      </div>\n    }\n    \n  </> :\n  <button className=\"btn btn-warning my-3\" onClick={e => {\n    setIsCreatingScript(true);\n    handleGenerateScript();\n  }}> Создать скрипт</button>\n  );\n}\n\nexport default ClientAccountNewScript;\n\nfunction toDate (dstr) { return new Date(dstr).getTime(); };\n\nfunction toDateTimeLocale (d) { return new Date(d - new Date(d).getTimezoneOffset() * 60000).toISOString().slice(0, -8); };\n\nfunction generate ({sum = 100, profit = 0.03, duration=60000, step=1, start= Date.now()}) {\n  const durMs = duration;\n  const fsum = sum*(1+profit);\n  const startMs = start;\n\n  const points = recurGener();\n  points.unshift(0);\n  points.push(1);\n\n  return points.map((p, i) => [startMs + i * duration / points.length , sum + (fsum-sum)*p]);\n}\n\nfunction recurGener(start = 0, end = 1, deep = 0, maxDeep = 6) {\n  const deepRandCoef = 0.1;\n\n  let middle = 2; \n  while(middle > 1) {\n    middle = start + (end - start) / 2 - (1 - 2.4 * Math.random()) * deepRandCoef;\n  }\n\n  const res = [middle];\n\n  if(deep < maxDeep) {\n    res.unshift(...recurGener(start, middle, deep + 1));\n    res.push(...recurGener(middle, end, deep + 1));\n  }\n  \n  return res;\n}\n","import Chart from 'src/components/Chart.js';\nimport { selectAllScripts, useDeleteScriptMutation } from 'src/features/scripts/scriptsApiSlice.js';\n\nconst ClientAccountScriptListItem = ({script}) => {\n  const [\n    deleteScript,\n    { isSuccess, isLoading, isError, isUninitialized }\n  ] = useDeleteScriptMutation();\n  \n  const handleRemoveScript = (id) => deleteScript({id});\n \n  return (\n    <div className=\"row\">\n      <div className=\"col-12\">\n        {new Date(script.info.start).toLocaleTimeString(\"ru-RU\")}, {new Date(script.info.start).toLocaleDateString(\"ru-RU\")} -  {new Date(script.info.start + script.info.duration).toLocaleTimeString(\"ru-RU\")}, {new Date(script.info.start + script.info.duration).toLocaleDateString(\"ru-RU\")}\n      </div>\n      <Chart name=\"Сумма\" script={script} compute={true}/>\n      \n      <div className=\"col-lg-12\">\n        <button className=\"btn btn-danger float-end\" onClick={e => handleRemoveScript(script.id)}>Удалить</button>\n      </div>\n    </div>\n  );\n}\n\nexport default ClientAccountScriptListItem;\n","import { useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\n\nimport ClientAccountScriptListItem from './ClientAccountScriptListItem.js'\nimport { selectAllScripts, useDeleteScriptMutation } from 'src/features/scripts/scriptsApiSlice.js';\nimport Chart from 'src/components/Chart.js';\n\nconst ClientAccountScriptList = ({ email }) => {\n  const { id } = useParams();\n  const scripts = useSelector(state => selectAllScripts(state))\n    .filter(script => script.info.clientEmail === email || script.info.clientId === id) || {};\n\n  const [\n    deleteScript,\n    { isSuccess, isLoading, isError, isUninitialized }\n  ] = useDeleteScriptMutation();\n  \n  const handleRemoveScript = (id) => deleteScript({id});\n  \n  return (\n      scripts &&\n      scripts.length ? \n        \n        <div className=\"col-lg-12\">\n          <h3 className=\"\">Список активных скриптов.</h3>\n          {\n            scripts\n              .reduce((filtered, script) => {\n                const {start, duration} = script.info;\n                if(start + duration < Date.now()) {\n                  filtered[2].push(script);\n                }\n                else if(start > Date.now()) {\n                  filtered[1].push(script);\n                }\n                else if(start < Date.now()) {\n                  filtered[0].push(script);\n                }\n                return filtered;\n              }, [[], [], []])\n              //.map(scriptsChunk => scriptsChunk.sort((a,b) => b.info.start - a.info.start))\n              .map((scriptsChunk, i) => {\n                const label = [\"Действующий\", \"Запланировано\", \"Завершено\"]\n                return (\n                  <div key={i}>\n                    <hr />\n                    <h4>{label[i]}</h4>\n                    {scriptsChunk.map(script => <><ClientAccountScriptListItem key={script.id} script={script} compute={true} /></>)}\n                  </div>\n                )\n              })\n              .flat(1)\n          }\n        </div> :\n        <p className=\"\">Список скриптов пустой.</p>\n  );\n}\n\nexport default ClientAccountScriptList;\n","import { useState, useEffect } from 'react';\nimport { useParams, Link, useNavigate } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport ClientAccountInfo from 'src/components/clientAccount/ClientAccountInfo';\nimport ClientAccountNewScript from 'src/components/clientAccount/ClientAccountNewScript';\nimport ClientAccountScriptList from 'src/components/clientAccount/ClientAccountScriptList';\nimport { selectClientById } from 'src/features/admins/clientsApiSlice';\nimport { selectAllScripts, useDeleteScriptMutation } from 'src/features/scripts/scriptsApiSlice.js';\nimport useAuth from 'src/hooks/useAuth';\nimport Chart from 'src/components/Chart.js';\n\nconst ClientAccount = () => {\n  const { id } = useParams();\n  const you = useAuth();\n  const {\n    email,\n    firstname,\n    lastname,\n    createdAt,\n    updatedAt,\n    deleted,\n  } = useSelector(state => selectClientById(state, id)) || {};\n  \n  return (\n  <div className=\"container \">\n    <div className=\"row\">\n      { email ?  \n        <>\n          <div className=\"col-lg-8 col-xs-12 container\">\n            <div className=\"row\">\n              <div className=\"col-lg-4 border border-dark overflow-hidden\">\n                <div className=\"col-lg-12 text-dark h5\">{(firstname || lastname) ? [firstname, lastname].join(\" \") : email }</div>\n              </div>\n            </div>\n            <div className=\"col-lg-12\">{ \n              deleted ?\n              <h3 className=\"h3 my-4\">Удалён</h3> :\n                  <>\n              <ClientAccountNewScript />\n              <ClientAccountScriptList email={email}/>\n                </>\n            }</div>\n          </div>\n          <div className=\"col-lg-4 container\">{\n            //deleted ?\n            // <h3 className=\"h3 my-4\">Удалён</h3> :\n            <>\n              <ClientAccountInfo />\n            </>\n          }</div>\n        </> :\n        <div className=\"col-lg-6\">Клиент загружается</div>\n      }\n      <Link to=\"/admin/home\">Назад к списку клентов</Link>\n    </div>\n  </div>\n  );\n}\n\nexport default ClientAccount;\n","const AdminsListPage = () => {\n  return (\n    <div>AdminsListPage</div>\n  );\n}\n\nexport default AdminsListPage;\n","const AdminAccount = () => {\n  return (\n    <div>AdminAccount</div>\n  );\n}\n\nexport default AdminAccount;\n\n","import { useState, useEffect } from 'react';\nimport { useAddNewAdminMutation } from '../../features/admins/adminsApiSlice';\nimport useAuth from '../../hooks/useAuth';\nimport { useNavigate } from 'react-router-dom';\n\nconst AdminCreate = () => {\n  const { roles } = useAuth()\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if(!roles.includes('superadmin')) {\n      navigate('/home');\n    }\n  }, [roles]);\n\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [adminRole, setAdminRole] = useState(true);\n  const [superadminRole, setSuperadminRole] = useState(false);\n\n  const [addNewAdmin, {\n    isLoading,\n    isSuccess,\n    isError,\n    error\n  }] = useAddNewAdminMutation();\n\n  const canSave = username.length >= 4 && password.length >= 8;\n  console.log(canSave);\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    console.log(username, password, adminRole, superadminRole);\n    if (canSave) {\n      try {\n        const { success } = await addNewAdmin({ username, password, adminRole, superadminRole }).unwrap()\n        setUsername('');\n        setPassword('');\n        setAdminRole(true);\n        setSuperadminRole(false);\n        navigate('/home');\n      }\n      catch (err) {\n        console.log(err)\n        setPassword('');\n      }\n    }\n  }\n\n  return (\n    <form onSubmit={e => handleSubmit(e)} className='form container'>\n      <div className=\"row\">\n        <div className=\"col-lg-4\">\n          <div className=\"form-group\">\n          <label htmlFor=\"username\">username</label>\n          <input \n            value={username}\n            onChange={e=>setUsername(e.target.value)}\n            id=\"username\" \n            type=\"text\" \n            autoComplete=\"off\" \n            required className={`form-control floating ${username.length && (username.length >= 4 ? 'is-valid' : 'is-invalid' )}`} />\n          </div>\n          <div className=\"form-group\">\n          <label htmlFor=\"password\">password</label>\n          <input \n            value={password}\n            onChange={e=>setPassword(e.target.value)}\n            id=\"password\" \n            type=\"text\" \n            autoComplete=\"off\" \n            required \n            required className={`form-control floating mb-3 ${password.length && (password.length >= 8 ? 'is-valid' : 'is-invalid' )}`} />\n          </div>\n          <div className=\"d-flex justify-content-around\">\n            <div className=\"form-check\">\n              <input \n                checked={superadminRole || adminRole}\n                onChange={e => setAdminRole(e.target.checked)}\n                id=\"checkAdmin\" \n                type=\"checkbox\" \n                disabled={true}\n                className=\"form-check-input\" />\n              <label htmlFor=\"checkAdmin\" className=\"form-check-label\">admin</label>\n            </div>\n            <div className=\"form-check\">\n              <input \n                checked={superadminRole}\n                onChange={e => setSuperadminRole(e.target.checked)}\n                id=\"checkSuperadmin\" \n                type=\"checkbox\" \n                className=\"form-check-input\" />\n              <label htmlFor=\"checkSuperadmin\" className=\"form-check-label\">superadmin</label>\n            </div>\n          </div>\n          <button type=\"submit\" className=\"btn btn-warning mt-3\" disabled={!canSave}>создать</button>\n        </div>\n      </div>\n    </form>\n  );\n}\n\nexport default AdminCreate;\n","import { Routes, Route, Navigate, Link } from 'react-router-dom';\n\nimport AdminHome from './AdminHome';\nimport AdminAppLayout from './AdminAppLayout.js';\nimport ClientsListPage from './dashboard/ClientsListPage.js';\nimport ClientAccount from './dashboard/ClientAccount.js';\nimport AdminsListPage from './dashboard/AdminsListPage.js';\nimport AdminAccount from './dashboard/AdminAccount.js';\nimport AdminCreate from './AdminCreate.js';\n\n//import RegisterForm from '../../features/auth/RegisterForm.js';\nimport Layout from '../../components/Layout';\n\nconst AdminApp = () => {\n  return (\n    <Routes>\n      <Route path=\"/*\" element={<AdminAppLayout />}>\n        <Route index element={<Link to=\"/home\">Home</Link>} />\n        <Route path=\"home\" element={<AdminHome />} />\n        <Route path=\"clients\" element={<ClientsListPage />} />\n        <Route path=\"clients/:id\" element={<ClientAccount />} />\n        \n        <Route path=\"admins\" element={<AdminsListPage />} />\n        <Route path=\"admins/:username\" element={<AdminAccount />} />\n        <Route path=\"admins/create\" element={<AdminCreate />} />\n\n        <Route path=\"*\" element={<Navigate to=\"/\" replace />} />\n      </Route>\n    </Routes>\n  );\n};\n\nexport default AdminApp;\n\n","const Footer = () => {\n  return (\n    <footer>\n       тут что-нибудь?(footer)\n    </footer>\n  )\n}\n\nexport default Footer;\n","import { useRef, useState, useEffect } from 'react'\nimport { useNavigate, Link } from 'react-router-dom'\nimport { useDispatch } from 'react-redux'\nimport { setCredentials } from './authSlice'\nimport { useLoginMutation } from './authApiSlice'\nimport usePersist from '../../hooks/usePersist'\nimport useTitle from '../../hooks/useTitle'\nimport PulseLoader from 'react-spinners/PulseLoader'\n\nconst Login = () => {\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [errMsg, setErrMsg] = useState('')\n  const [persist, setPersist] = usePersist()\n\n  const userRef = useRef()\n  const errRef = useRef()\n\n  const navigate = useNavigate()\n  const dispatch = useDispatch()\n\n  const [login, { isLoading }] = useLoginMutation()\n\n  useEffect(() => {\n    userRef.current.focus()\n  }, [])\n\n  useEffect(() => {\n    setErrMsg('');\n  }, [username, password])\n\n  const handleSubmit = async (e) => {\n    e.preventDefault()\n    try {\n      const { accessToken } = await login({ username, password }).unwrap()\n      dispatch(setCredentials({ accessToken }))\n      setUsername('')\n      setPassword('')\n      navigate('/home')\n    } catch (err) {\n      if (!err.status) {\n        setErrMsg('No Server Response');\n      } else if (err.status === 400) {\n        setErrMsg('Missing Username or Password');\n      } else if (err.status === 401) {\n        setErrMsg('Unauthorized');\n      } else {\n        setErrMsg(err.data?.message);\n      }\n      //errRef.current.focus();\n    }\n  }\n\n  const handleUserInput = (e) => setUsername(e.target.value)\n  const handlePwdInput = (e) => setPassword(e.target.value)\n  const handleToggle = () => setPersist(prev => !prev)\n\n  const errClass = errMsg ? \"errmsg\" : \"offscreen\"\n\n  if (isLoading) return <PulseLoader color={\"#FFF\"} />\n\n  const content = (\n    <section className=\"public\">\n      <p ref={errRef} className={errClass} aria-live=\"assertive\">{errMsg}</p>\n\n      <form className=\"form\" onSubmit={handleSubmit}>\n        <label htmlFor=\"username\">логин: </label>\n        <input\n          className=\"form__input\"\n          type=\"text\"\n          id=\"username\"\n          ref={userRef}\n          value={username}\n          onChange={handleUserInput}\n          autoComplete=\"off\"\n          required\n        />\n\n        <label htmlFor=\"password\">пароль: </label>\n        <input\n          className=\"form__input\"\n          type=\"password\"\n          id=\"password\"\n          onChange={handlePwdInput}\n          value={password}\n          required\n        />\n        <button className=\"form__submit-button\">Войти</button>\n\n        <label htmlFor=\"persist\" className=\"form__persist\">\n          <input\n            type=\"checkbox\"\n            className=\"form__checkbox\"\n            id=\"persist\"\n            onChange={handleToggle}\n            checked={persist}\n          />\n          запомнить меня\n        </label>\n      </form>\n    </section>\n  )\n\n  return content\n}\nexport default Login\n"],"names":["Header","username","roles","useAuth","navigate","useNavigate","accountPanel","setAccountPanel","useState","isOpen","sendLogout","isLoading","isSuccess","isError","error","useSendLogoutMutation","useEffect","console","log","setPersist","_jsxs","children","_jsx","Link","to","_Fragment","onClick","prev","className","title","_ref","admin","a","adminsAdapter","createEntityAdapter","initialState","getInitialState","adminsApiSlice","apiSlice","injectEndpoints","endpoints","builder","getAdmins","query","validateStatus","response","result","status","transformResponse","responseData","loadedAdmins","map","id","_id","setAll","providesTags","arg","ids","type","addNewAdmin","mutation","initialAdminData","url","method","body","invalidatesTags","updateAdmin","deleteAdmin","useGetAdminsQuery","useAddNewAdminMutation","useUpdateAdminMutation","useDeleteAdminMutation","selectAdminsResult","select","selectAdminsData","createSelector","adminsResult","data","selectAll","selectAllAdmins","selectById","selectAdminById","selectIds","selectAdminIds","getSelectors","state","_selectAdminsData","DashAdminsList","you","admins","useSelector","AdminItemList","includes","name","client","Object","keys","filter","key","match","firstname","lastname","email","createdAt","Date","toLocaleDateString","scripts","length","some","_ref2","info","start","duration","now","updatedAt","DashClientsList","clients","selectAllClients","ClientItemList","Dashboard","AdminHome","AdminAppLayout","Outlet","Footer","ClientsListPage","ClientAccountInfo","useParams","phone","trader","active","deleted","selectClientById","isEdit","setIsEdit","newTrader","setNewTrader","scriptTime","setScriptTime","scriptProfit","setScriptProfit","updateClientNewTrader","isUninitialized","useUpdateClientNewTraderMutation","deleteClient","deleteClientState","useDeleteClientMutation","scope","onChange","e","target","value","disabled","i","style","border","preventDefault","toDateTimeLocale","d","getTimezoneOffset","memo","script","compute","list","newData","datamapped","setInterval","updated","JSON","stringify","ApexCharts","exec","chartOptions","clearInterval","ApexChart","series","options","next","reduce","datas","arr","push","chart","toString","animations","enabled","dynamicAnimation","toolbar","show","zoom","colors","markers","size","discrete","seriesIndex","dataPointIndex","fillColor","strokeColor","shape","stroke","curve","width","tooltip","theme","insersect","xaxis","tickAmount","yaxis","text","labels","formatter","val","toFixed","ClientAccountNewScript","isCreatingScript","setIsCreatingScript","sum","setSum","setDuration","setStart","isStartNow","setIsStartNow","step","setStep","profit","setProfit","generatedScript","setGeneratedScript","traderId","addNewScript","useAddNewScriptMutation","handleGenerateScript","creator","creatorId","clientEmail","clientId","fsum","startMs","points","recurGener","unshift","p","generate","resetGeneratedScript","onSubmit","placeholder","htmlFor","Math","round","checked","userSelect","display","dstr","getTime","toISOString","slice","Chart","arguments","undefined","end","deep","maxDeep","middle","random","res","deleteScript","useDeleteScriptMutation","toLocaleTimeString","handleRemoveScript","selectAllScripts","filtered","scriptsChunk","ClientAccountScriptListItem","flat","ClientAccount","join","ClientAccountScriptList","AdminsListPage","AdminAccount","AdminCreate","setUsername","password","setPassword","adminRole","setAdminRole","superadminRole","setSuperadminRole","canSave","async","success","unwrap","err","handleSubmit","autoComplete","required","AdminApp","Routes","Route","path","element","index","Navigate","replace","Login","errMsg","setErrMsg","persist","usePersist","userRef","useRef","errRef","dispatch","useDispatch","login","useLoginMutation","current","focus","errClass","PulseLoader","color","ref","accessToken","setCredentials","_err$data","message","handleToggle"],"sourceRoot":""}